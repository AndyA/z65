   10REM > ClockSp 2.01
   20REM Calculate CPU clock speed
   30PRINT"BBC BASIC CPU Timing Program"
   40A%=0:T%=TIME:REPEATA%=A%+1:UNTILTIME>T%+500
   50Z=0:Z%=0:B=1:B%=1:F=1/10:C=100:C%=100:D=510:D%=510:F%=3
   60REPEAT:C=C*10:C%=C%*10:D=D*10:D%=D%*10:F%=F%*10:F=F*10:A%=A%DIV10:UNTILA%<50
   70PRINT"Real REPEAT loop    ";:T%=TIME:A=Z:REPEATA=A+B:UNTILA>C:T%=TIME-T%:PROCp(F*41000/T%)
   80PRINT"Integer REPEAT loop ";:T%=TIME:A%=Z%:REPEATA%=A%+B%:UNTILA%>C%:T%=TIME-T%:PROCp(F*23900/T%)
   90PRINT"Real FOR loop       ";:T%=TIME:FORA=Z TO D STEP B:NEXT:T%=TIME-T%:PROCp(F*51200/T%)
  100PRINT"Integer FOR loop    ";:T%=TIME:FORA%=Z% TO D% STEP B%:NEXT:T%=TIME-T%:PROCp(F*17800/T%)
  110PRINT"Floating-Point Test ";:IFCOS0=0:PRINTSPC4"<none>"
  120IFCOS0<>0:A=1:T%=TIME:FORJ%=1 TO F%:A=TAN(ATN(EXP(LN(SQR(A*A)))))+1:NEXT:T%=TIME-T%:PROCp(F*68800/T%)
  130REM PRINT"Ackermann Recursion ";
  140REM M%=3:T%=TIME:FORN%=1 TO 3:Z%=FNAck(M%,N%):NEXT:T%=TIME-T%:PROCp(F*255400/T%)
  150PRINT"String manipulation ";
  160T%=TIME:A$="STRINGMANIPULATIONTEST":FORA%=0TOF%*4:A$=RIGHT$(MID$(A$,LENA$/2,LENA$/4+1)+RIGHT$(A$,LENA$/4)+MID$(A$,LENA$/2,2)+LEFT$(A$,LENA$/4)+MID$(A$,LENA$/4,LENA$/4+1),LENA$):NEXT:T%=TIME-T%:PROCp(F*72750/T%)
  170PRINT"Procedure call      ";:T%=TIME:FORA%=Z% TO D%:PROCtest:NEXT:T%=TIME-T%:PROCp(F*80500/T%)
  180PRINT"GOSUB call          ";:T%=TIME:FORA%=Z% TO D%:GOSUB300:NEXT:T%=TIME-T%:PROCp(F*90000/T%)
  190PRINT"Combined Average    ";:PROCp(FNspeed)
  200PRINT'"Compared to a 2.00MHz BBC B"
  210END
  220:
  230DEFFNAck(M%,N%)
  240IF M%=0:=N%+1
  250IF N%=0:=FNAck(M%-1,1)
  260=FNAck(M%-1,FNAck(M%,N%-1))
  270:
  280DEFPROCtest:ENDPROC
  290:
  300RETURN
  310:
  320DEFPROCp(T%):PRINTRIGHT$("     "+STR$(T%DIV100),6);".";RIGHT$("0"+STR$(T%),2);"MHz";CHR$8;CHR$8;CHR$8;CHR$8:ENDPROC
  330:
  340REM This is calibrated against a
  350REM BBC model B with no second
  360REM processor, running BASIC II
  370REM and with almost all interupts
  380REM turned off using:
  390REM ?&FE4E=&3F
  400REM This gives 2.00MHz.
  410:
  420REM Savage Floating Point test and
  430REM Ackermann Recursion test added
  440REM -Mar-1993, based on A&B Jan 90.
  450:
  460REM Version 2.00 recalibrates
  470REM itself for faster systems
  480REM 15-Mar-2002
  490:
  500DEFFNspeed:LOCAL A,B,C,D,F,Z,A%,B%,C%,D%,F%,Q%,R%,S%,U%,V%,W%,X%,Y%,Z%
  510A%=0:T%=TIME:REPEATA%=A%+1:UNTILTIME>T%+500
  520Z=0:Z%=0:B=1:B%=1:F=0.1:C=100:C%=100:D=510:D%=510:F%=3
  530REPEAT:C=C*10:C%=C%*10:D=D*10:D%=D%*10:F%=F%*10:F=F*10:A%=A%DIV10:UNTILA%<50
  540T%=TIME:A=Z:REPEATA=A+B:UNTILA>C:T%=TIME-T%:U%=F*41000/T%
  550T%=TIME:A%=Z%:REPEATA%=A%+B%:UNTILA%>C%:T%=TIME-T%:V%=F*23900/T%
  560T%=TIME:FORA=Z TO D STEPB:NEXT:T%=TIME-T%:W%=F*51200/T%
  570T%=TIME:FORA%=Z% TO D% STEPB%:NEXT:T%=TIME-T%:X%=F*17800/T%
  580Y%=X%:IFCOS0<>0:A=1:T%=TIME:FORJ%=1 TO F%:A=TAN(ATN(EXP(LN(SQR(A*A)))))+1:NEXT:T%=TIME-T%:Y%=F*68800/T%
  590T%=TIME:A$="STRINGMANIPULATIONTEST":FORA%=0TOF%*4:A$=RIGHT$(MID$(A$,LENA$/2,LENA$/4+1)+RIGHT$(A$,LENA$/4)+MID$(A$,LENA$/2,2)+LEFT$(A$,LENA$/4)+MID$(A$,LENA$/4,LENA$/4+1),LENA$):NEXT:T%=TIME-T%:S%=F*72750/T%
  600T%=TIME:FORA%=Z% TO D%:PROCtest:NEXT:T%=TIME-T%:R%=F*80500/T%
  610T%=TIME:FORA%=Z% TO D%:GOSUB300:NEXT:T%=TIME-T%:Q%=F*90000/T%
  620=INT((Q%+R%+S%+U%+V%+W%+X%+Y%)/7.8)
  630REM Returns CPU speed*100
