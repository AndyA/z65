oswrch        = &FFEE
osnewl        = &FFE7

zig_trace     = &FE90

ZP%           = &70

scratch       = FNzp(4)


code_size% = 400
DIM code code_size% + 200

FOR pass = 0 TO 2 STEP 2
P% = code
[OPT pass

.blip_t       JSR trace
.blip         LDX zig_trace
              LDY #1
              STY zig_trace
              SEC
              CLC
              DEY
              DEY
              STX zig_trace
              RTS

.trace        STA scratch + 0
              PHP : PLA : STA scratch + 1
              PLA : STA scratch + 2
              PLA : STA scratch + 3
              LDA zig_trace : PHA
              LDA #(trace_exit - 1) DIV 256 : PHA
              LDA #(trace_exit - 1) MOD 256 : PHA
              LDA scratch + 3 : PHA
              LDA scratch + 2 : PHA
              LDA scratch + 1 : PHA
              LDA scratch + 0 : PHA
              LDA #1 : STA zig_trace
              PLA
              PLP
              RTS

.trace_exit   STA scratch + 0
              PHP : PLA : STA scratch + 1
              PLA : STA zig_trace
              LDA scratch + 1 : PHA
              LDA scratch + 0
              PLP
              RTS

]
NEXT
PRINT "[36mCode size: "; P% - code; ", allocated: "; code_size%; "[0m"
IF P% - code > code_size% THEN PRINT "[31mCode overflow![0m" : STOP

CALL blip

END

DEF FNzp(size%)
  LOCAL S%
  S% = ZP%
  ZP% = ZP% + size%
  IF ZP% >= &90 THEN STOP
=S%
